name: GoBuild

on:
  push:
    #branches: [ master ]
  pull_request:
    #branches: [ master ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Build
        run: make build
      - name: Test
        run: make test
      - name: Codesign executable
        if: startsWith(github.ref, 'refs/tags/')
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          MACOS_DEVELOPER_ID: ${{ secrets.MACOS_DEVELOPER_ID }}
          MACOS_DEVELOPER_TEAM: ${{ secrets.MACOS_DEVELOPER_TEAM }}
          MACOS_ALTOOL_APPPASSWD: ${{ secrets.MACOS_ALTOOL_APPPASSWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p build.keychain.pw build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p build.keychain.pw build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k build.keychain.pw build.keychain
          /usr/bin/codesign --force -s $MACOS_DEVELOPER_ID --options runtime ./bin/mac/*
          hdiutil create -fs HFS+ -ov -format UDZO -srcfolder ./bin/mac/ -volname cselo cselo-mac-${{ steps.vars.outputs.tag }}.dmg
          xcrun altool --notarize-app --primary-bundle-id "de.wlbr.cselo" --username "$MACOS_DEVELOPER_ID"   --password "$MACOS_ALTOOL_APPPASSWD" --asc-provider "$MACOS_DEVELOPER_TEAM"  --file cselo-mac-${{ steps.vars.outputs.tag }}.dmg
          sleep 150
          stapler staple cselo-mac-${{ steps.vars.outputs.tag }}.dmg
      - name: Deploy
        if: startsWith(github.ref, 'refs/tags/')
        run: make deploy
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cselo-linux-${{ steps.vars.outputs.tag }}.tgz
            cselo-mac-${{ steps.vars.outputs.tag }}.dmg
            cselo-win-${{ steps.vars.outputs.tag }}.zip

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



